<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <display-name>
        Welcome to e-university
    </display-name>

    <description>
        Welcome to e-university
    </description>

    <request-character-encoding>UTF-8</request-character-encoding>
    <response-character-encoding>UTF-8</response-character-encoding>

    <!-- index.jsp автоматически редиректит на /main -->
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

    <!--
    default фильтр нужн для того, чтобы решить проблему подключения css, js и других ресурсов.
    Кажется AuthFilter (отвечающий за авторизацию пользователей),
    и замапленный к url-patter: "/*" блокирует получение ресурсов из статических директорий веб-приложения.
    Одним из решений проблемы (которое придумал я) было бы: в коде класса AuthFilter проверять запрашиваемый URL/URI.
    Распарсив адрес запроса можно определить, какой контент запрашивается.
    И если запрашиваются ресурсы с .css, .js и т.д. расширениями - пропускать валидацию фильтра
    вызовом filterChain.doFilter(req, res).
    Но это решение некрасивое и имеет много подводных камней, которые могут доставить неприятности:
    можно будет легко проходить фильтр без авторизации.

    В интернете нашел вот такой красивый способ решения возникшей проблемы:
    http://www.kuligowski.pl/java/rest-style-urls-and-url-mapping-for-static-content-apache-tomcat,5

    Оно основано на реализации default фильтра, который будет обрабатывать все запросы к ресурсам, находящимся в директории static.
    default фильтр будет обрабатывать все запросы к static/* вместо AuthFilter.
    default фильтр всего лишь передает запрос default сервлету, который предоставляет доступ ко всем файлам веб-приложения, в том числе и к директории static.
    Минус данного варианта решения проблемы: можно получать любые ресурсы (картинки, код и т.д.) в static/... без прохождения авторизации.
    -->
    <filter>
        <filter-name>default</filter-name>
        <!-- <servlet-name>default</servlet-name> Убрал. Вроде бы оно не нужно. Или же его нужно поместить в раздел filter-mapping для default фильтра? Во всяком случае, без него пока все работает норм -->
        <filter-class>com.github.varenytsiamykhailo.euniversity.web.DefaultFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>default</filter-name>
        <url-pattern>/static/*</url-pattern>
        <url-pattern>*.ico</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>AuthFilter</filter-name>
        <filter-class>com.github.varenytsiamykhailo.euniversity.web.AuthFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>AuthFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <servlet>
        <servlet-name>LogoutServlet</servlet-name>
        <servlet-class>com.github.varenytsiamykhailo.euniversity.web.LogoutServlet</servlet-class>
    </servlet>

    <servlet>
        <servlet-name>MainPageServlet</servlet-name>
        <servlet-class>com.github.varenytsiamykhailo.euniversity.web.MainPageServlet</servlet-class>
    </servlet>

    <servlet>
        <servlet-name>RegistrationPageServlet</servlet-name>
        <servlet-class>com.github.varenytsiamykhailo.euniversity.web.RegistrationPageServlet</servlet-class>
    </servlet>

    <servlet>
        <servlet-name>DepartmentStaffServlet</servlet-name>
        <servlet-class>com.github.varenytsiamykhailo.euniversity.web.DepartmentStaffServlet</servlet-class>
    </servlet>

    <servlet>
        <servlet-name>StudentEditPageServlet</servlet-name>
        <servlet-class>com.github.varenytsiamykhailo.euniversity.web.StudentEditPageServlet</servlet-class>
    </servlet>

    <servlet>
        <servlet-name>EmailChangingServlet</servlet-name>
        <servlet-class>com.github.varenytsiamykhailo.euniversity.web.EmailChangingServlet</servlet-class>
    </servlet>

    <servlet>
        <servlet-name>PasswordChangingServlet</servlet-name>
        <servlet-class>com.github.varenytsiamykhailo.euniversity.web.PasswordChangingServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>LogoutServlet</servlet-name>
        <url-pattern>/logout</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>MainPageServlet</servlet-name>
        <url-pattern>/main</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>RegistrationPageServlet</servlet-name>
        <url-pattern>/registration</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>DepartmentStaffServlet</servlet-name>
        <url-pattern>/department-staff</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>StudentEditPageServlet</servlet-name>
        <url-pattern>/student-edit</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>EmailChangingServlet</servlet-name>
        <url-pattern>/change-email</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>PasswordChangingServlet</servlet-name>
        <url-pattern>/change-password</url-pattern>
    </servlet-mapping>

    <resource-ref>
        <description>MySQL Connection</description>
        <res-ref-name>jdbc/mysqlconnector</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>

</web-app>